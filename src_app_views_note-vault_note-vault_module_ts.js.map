{"version":3,"sources":["./src/app/views/note-vault/note-vault-list/note-vault-list.component.ts","./src/app/views/note-vault/note-vault-list/note-vault-list.component.html","./src/app/views/note-vault/note-vault-routing.module.ts","./src/app/views/note-vault/note-vault.module.ts"],"names":[],"mappings":"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","file":"src_app_views_note-vault_note-vault_module_ts.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { SodiumPlus, CryptographyKey } from 'sodium-plus';\nimport { JemService } from '../../../shared/services/jem.service';\nimport { AuthService } from '../../../shared/services/auth.service';\n\n@Component({\n    selector: 'app-note-vault-list',\n    templateUrl: './note-vault-list.component.html',\n    styleUrls: ['./note-vault-list.component.scss']\n})\nexport class NoteVaultListComponent implements OnInit {\n    vault: any[]\n\n    constructor(\n        private modalService: NgbModal,\n        private toastr: ToastrService,\n        private jemService: JemService,\n        private auth: AuthService\n    ) { }\n\n    async ngOnInit() {\n       // await this.loadVault()\n    }\n    async loadVault() {\n        var sodium = (!sodium) ? await SodiumPlus.auto(): sodium;\n        var outputVault = [];\n        await this.auth.getAllCredentials()\n            .subscribe(async res => {\n\t\t\t\tres.forEach(async item => {\n\t\t\t\t\tvar data = JSON.parse(item.data);\n\t\t\t\t\tvar metaKEKBuf = Buffer.from(data.metaKEK, 'base64');\n\t\t\t\t\tvar metaDataBuf = Buffer.from(data.metaData, 'base64');\n\n\t\t\t\t\tvar metaKey = await sodium.crypto_aead_xchacha20poly1305_ietf_decrypt(\n\t\t\t\t\t\tmetaKEKBuf.slice(24),\n\t\t\t\t\t\tmetaKEKBuf.slice(0, 24),\n\t\t\t\t\t\tCryptographyKey.from(this.auth.userSettings.metaKey)\n\t\t\t\t\t);\n\n\t\t\t\t\tvar metaData = await sodium.crypto_aead_xchacha20poly1305_ietf_decrypt(\n\t\t\t\t\t\tmetaDataBuf.slice(24),\n\t\t\t\t\t\tmetaDataBuf.slice(0, 24),\n\t\t\t\t\t\tCryptographyKey.from(metaKey)\n\t\t\t\t\t);\n\n\t\t\t\t\tmetaData = JSON.parse(metaData);\n\t\t\t\t\tvar passDataBuf = Buffer.from(data.passData, 'base64');\n\t\t\t\t\t\n\t\t\t\t\toutputVault.push({\n\t\t\t\t\t\t\"id\":item.RowKey,\n\t\t\t\t\t\t\"title\":metaData.title,\n\t\t\t\t\t\t\"username\":metaData.username,\n\t\t\t\t\t\t\"status\": \"encrypted\"});\n                });\n                this.vault = outputVault;\n\t\t\t\t});\n    }\n\n    deleteItem(id, modal) {\n        this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n            .result.then((result) => {\n                this.auth.deleteCredential(id)\n                    .subscribe(res => {\n                        this.toastr.success('Item Deleted!', 'Success!', { timeOut: 3000 });\n                        this.loadVault();\n                    })\n            }, (reason) => {\n            });\n    }\n\n}","<div class=\"breadcrumb\">\n    <h1>Vault</h1>\n    <ul>\n        <li><a href=\"\">Logins</a></li>\n    </ul>\n</div>\n\n<div class=\"separator-breadcrumb border-top\"></div>\n\n<div class=\"row mb-3\">\n    <div class=\"col-md-12 mb-3\">\n        <button class=\"btn btn-primary float-right\" [routerLink]=\"['/vault/new']\">New</button>\n    </div>\n    <div class=\"col-md-12\">\n        <div class=\"card o-hidden\">\n            <ngx-datatable *ngIf=\"vault?.length\" style=\"box-shadow: none\" class=\"material fullscreen\" [style.height]=\"60*vault.length+60+'px'\" [columnMode]=\"'force'\"\n                [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [scrollbarH]=\"true\" [rows]=\"vault\">\n                <ngx-datatable-column>\n                    <ng-template ngx-datatable-header-template>\n                        Title\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.title}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column>\n                    <ng-template ngx-datatable-header-template>\n                        Username/Email Address\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.username}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column [flexGrow]=\"1\">\n                    <ng-template ngx-datatable-header-template>\n                        Status\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        <div class=\"badge p-2 mr-1\" [ngClass]=\"{\n                            'badge-outline-success': row.status === 'encrypted',\n                            'badge-outline-warning': row.status === 'processing',\n                            'badge-outline-danger': row.status === 'decrypted'\n                        }\">\n                            {{row.status}}\n                        </div>\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column [width]=\"120\">\n                    <ng-template ngx-datatable-header-template>\n                        Actions\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        <button class=\"btn btn-wide btn-outline-secondary mr-3\" [routerLink]=\"['/vault/edit', row.id]\">View</button>\n                        <button class=\"btn btn-outline-danger\" (click)=\"deleteItem(row.id, deleteConfirmModal)\">\n                            Delete\n                        </button>\n                    </ng-template>\n                </ngx-datatable-column>\n            </ngx-datatable>\n        </div>\n    </div>\n</div>\n\n<ng-template #deleteConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Are you sure?</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>You are about to delete this item.  Are you absolutely sure?</strong></p>\n        <span class=\"text-danger\">This operation can not be undone.</span>\n        \n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Keep</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Delete</button>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NoteVaultListComponent } from './note-vault-list/note-vault-list.component';\nimport { NoteVaultDetailComponent } from './note-vault-detail/note-vault-detail.component';\nimport { AuthGaurd } from '../../shared/services/auth.gaurd';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: NoteVaultListComponent\n    },\n    {\n        path: 'new',\n        component: NoteVaultDetailComponent\n    },\n    {\n        path: 'edit/:id',\n        // canActivate: [AuthGaurd],\n        component: NoteVaultDetailComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class NoteVaultRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NoteVaultRoutingModule } from './note-vault-routing.module';\nimport { NoteVaultDetailComponent } from './note-vault-detail/note-vault-detail.component';\nimport { NoteVaultListComponent } from './note-vault-list/note-vault-list.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgxDatatableModule,\n    ReactiveFormsModule,\n    SharedComponentsModule,\n    NgbModule,\n    NoteVaultRoutingModule\n  ],\n  declarations: [NoteVaultDetailComponent, NoteVaultListComponent]\n})\nexport class NoteVaultModule { }\n"],"sourceRoot":"webpack:///"}