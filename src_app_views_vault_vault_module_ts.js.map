{"version":3,"sources":["./src/app/views/vault/vault-detail/vault-detail.component.ts","./src/app/views/vault/vault-detail/vault-detail.component.html","./src/app/views/vault/vault-list/vault-list.component.ts","./src/app/views/vault/vault-list/vault-list.component.html","./src/app/views/vault/vault-routing.module.ts","./src/app/views/vault/vault.module.ts"],"names":[],"mappings":"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","file":"src_app_views_vault_vault_module_ts.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormArray } from '@angular/forms';\nimport { SodiumPlus, CryptographyKey } from 'sodium-plus';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../../shared/services/auth.service';\nimport { JemService } from '../../../shared/services/jem.service';\n\n@Component({\n    selector: 'app-invoice-detail',\n    templateUrl: './vault-detail.component.html',\n    styleUrls: ['./vault-detail.component.scss']\n})\nexport class VaultDetailComponent implements OnInit {\n    viewMode: 'edit' | 'print';\n    id: string;\n    isNew: boolean;\n    vault: any = {};\n    vaultForm: any = {};\n    vaultForms: any = [];\n    loading = false;\n    loadingText;\n    formIndex;\n    CHARACTER_SETS = [\n        [\"Numbers\", \"0123456789\"],\n        [\"Lowercase\", \"abcdefghijklmnopqrstuvwxyz\"],\n        [\"Uppercase\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"],\n        [\"ASCII symbols\", \"!\\\"#$%&'()*+,-./:;<=>?@[\\\\]^_`{|}~\"]\n    ];\n\n    showPasswordGenerator: boolean[] = [];\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private fb: FormBuilder,\n        private auth: AuthService,\n        private jemService: JemService,\n        private toastr: ToastrService\n    ) {}\n\n    \n\n    ngOnInit() {\n        this.formIndex = 0;\n        this.id = this.route.snapshot.params['id'];\n        this.isNew = !this.id;\n        if (this.isNew) {\n            this.viewMode = 'edit';\n        }\n        this.buildVaultForms(this.formIndex, this.vault);\n        if (this.id) {\n            this.viewMode = 'print';\n            this.auth.getCredential(this.id)\n                .subscribe(async res => {\n                    var sodium = (!sodium) ? await SodiumPlus.auto() : sodium;\n                    var data = JSON.parse(res.data);\n                    var metaKEKBuf = Buffer.from(data.metaKEK, 'base64');\n                    var metaDataBuf = Buffer.from(data.metaData, 'base64');\n\n                    var metaKey = await sodium.crypto_aead_xchacha20poly1305_ietf_decrypt(\n                        metaKEKBuf.slice(24),\n                        metaKEKBuf.slice(0, 24),\n                        CryptographyKey.from(this.auth.userSettings.metaKey)\n                    );\n\n                    var metaData = await sodium.crypto_aead_xchacha20poly1305_ietf_decrypt(\n                        metaDataBuf.slice(24),\n                        metaDataBuf.slice(0, 24),\n                        CryptographyKey.from(metaKey)\n                    );\n\n                    metaData = JSON.parse(metaData);\n\n                    this.vault = {\n                        \"id\": res.RowKey,\n                        \"title\": metaData.title,\n                        \"url\": metaData.url,\n                        \"username\": metaData.username,\n                        \"status\": \"encrypted\"\n                    };\n                });\n        }\n    }\n\n    isMobile() {\n        return window.innerWidth < 600;\n    }\n\n    buildVaultForms(formIndex, i: any = {}) {\n        this.vaultForms[formIndex] = this.fb.group({\n            id: [i.id],\n            title: [i.title],\n            url: [i.url],\n            username: [i.username],\n            password: [i.password],\n            length: 14,\n            numbers: 1,\n            uppercase: 1,\n            lowercase: 1,\n            specialchars: 1\n        });\n        this.showPasswordGenerator[formIndex] = false;\n    }\n\n    addEmptyVaultForm() {\n        this.formIndex++;\n        this.buildVaultForms(this.formIndex, {})\n    }\n\n    createItem(item: any = {}) {\n        return this.fb.group({\n            title: [item.title],\n            url: [item.url],\n            username: [item.username],\n            password: [item.password]\n        });\n    }\n\n    async saveItem(vault: any, terminal = true) {\n        return new Promise(async (resolve, reject) => {\n            this.loading = true;\n            this.loadingText = \"Touch your JEM...\";\n            var sodium = (!sodium) ? await SodiumPlus.auto() : sodium;\n            var metaKey = await sodium.randombytes_buf(32);\n            var passKey = await sodium.randombytes_buf(32);\n            var record: any = {\n                metaKEK: \"\",\n                passKEK: \"\",\n                type: 1,\n                metaData: {\n                    \"title\": vault.title,\n                    \"username\": vault.username,\n                    \"url\": vault.url\n                },\n                passData: {\n                    \"password\": vault.password\n                }\n            };\n\n            // ENCRYPT METADATA\n            var nonce = await sodium.randombytes_buf(24);\n            record.metaData = await sodium.crypto_aead_xchacha20poly1305_ietf_encrypt(\n                JSON.stringify(record.metaData),\n                nonce,\n                CryptographyKey.from(metaKey)\n            );\n            record.metaData = Buffer.concat([nonce, record.metaData]);\n            record.metaData = record.metaData.toString('base64');\n\n            // ENCRYPT PASSDATA\n            var nonce = await sodium.randombytes_buf(24);\n            record.passData = await sodium.crypto_aead_xchacha20poly1305_ietf_encrypt(\n                JSON.stringify(record.passData),\n                nonce,\n                CryptographyKey.from(passKey)\n            );\n            record.passData = Buffer.concat([nonce, record.passData]);\n            record.passData = record.passData.toString('base64');\n\n            // ENCRYPT METAKEY\n            var nonce = await sodium.randombytes_buf(24);\n            record.metaKEK = await sodium.crypto_aead_xchacha20poly1305_ietf_encrypt(\n                metaKey,\n                nonce,\n                CryptographyKey.from(this.auth.userSettings.metaKey)\n            );\n            record.metaKEK = Buffer.concat([nonce, record.metaKEK]);\n            record.metaKEK = record.metaKEK.toString('base64');\n\n            try {\n                await this.jemService.encrypt(passKey, this.auth.deviceSettings, terminal)\n                    .then(data => {\n                        record.passKEK = data;\n                    })\n            } catch (error) {\n                this.loading = false;\n                this.toastr.error(error.message, 'Error', {\n                    timeOut: 5000,\n                    closeButton: true,\n                    progressBar: true\n                });\n                return reject();\n            }\n\n            await this.auth.addCredential(record)\n                .subscribe((item: any) => {\n                    this.toastr.success('Saved item!', 'Success!', {\n                        timeOut: 3000\n                    });\n                    resolve('');\n                });\n        });\n    }\n\n    // Save multiple items from a single form that contains >1 credential\n    async saveCredentials() {\n        for (let i = 0; i < this.vaultForms.length; i++) {\n            let credential: any = this.vaultForms[i].value;\n            try {\n                await this.saveItem(credential, (i < (this.vaultForms.length - 1)) ? false : true);\n            }\n            catch(error) {\n\n            }\n        }\n        await this.router.navigateByUrl('/dashboard/v2');\n    }\n\n    // PASSWORD CREATION\n\n    async getRandomInt(min, max) {\n        var sodium = (!sodium) ? await SodiumPlus.auto() : sodium;\n        var byteArray = await sodium.randombytes_buf(1);\n        var range = max - min + 1;\n        var max_range = 256;\n        if (byteArray[0] >= Math.floor(max_range / range) * range)\n            return this.getRandomInt(min, max);\n\n        return min + (byteArray[0] % range);\n    }\n\n    doCopy(vaultFormID) {\n        const selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = this.vaultForms[vaultFormID].value.password;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n        this.toastr.success('The password is in your clipboard!', 'Success!', {\n            timeOut: 5000\n        });\n    }\n\n    async random_str(vaultFormID) {\n        var pieces = [];\n        var length = this.vaultForms[vaultFormID].value.length;\n        var keyspace = '';\n        keyspace = (this.vaultForms[vaultFormID].value.numbers == 1) ? this.CHARACTER_SETS[0][1] : '';\n        keyspace += (this.vaultForms[vaultFormID].value.lowercase == 1) ? this.CHARACTER_SETS[1][1] : '';\n        keyspace += (this.vaultForms[vaultFormID].value.uppercase == 1) ? this.CHARACTER_SETS[2][1] : '';\n        keyspace += (this.vaultForms[vaultFormID].value.specialchars == 1) ? this.CHARACTER_SETS[3][1] : '';\n        var max = (keyspace.length - 1);\n        for (var i = 0; i < length; ++i) {\n            pieces.push(keyspace[await this.getRandomInt(0, max)]);\n        }\n        this.vaultForms[vaultFormID].patchValue({\n            password: pieces.join(\"\")\n        });\n    }\n}","<div *ngIf=\"isMobile()\">\n    <div class=\"d-flex mb-5 col-lg-12 justify-content-between\" *ngIf=\"viewMode === 'edit'\">\n        <button class=\"btn btn-outline-secondary mr-3\" (click)=\"viewMode = 'print'\">Cancel</button>\n        <!-- <btn-loading btnClass=\"btn-primary\" [loading]=\"saving\" (click)=\"saveInvoice()\">Save</btn-loading> -->\n        <btn-loading btnClass=\"btn-primary\" [loadingText]=\"loadingText\" [loading]=\"loading\" (click)=\"saveCredentials()\">Save</btn-loading>\n\n    </div>\n    <div class=\"d-flex mb-5 col-xs-12 justify-content-between\" *ngIf=\"viewMode !== 'edit'\">\n        <button class=\"btn btn-outline-secondary mr-3 mb-sm-0 mb-3\" routerLink=\"/dashboard/v2\">Back To Vault</button>\n        <button class=\"btn btn-outline-secondary mr-3 mb-sm-0 mb-3\" (click)=\"viewMode = 'edit'\">Edit</button>\n    </div>\n</div>\n\n<div class=\"card-body justify-content-between\">\n\n    <div *ngIf=\"!isMobile()\" class=\"row\">\n        <div class=\"col-md-6\">\n          <h4 class=\"font-weight-bold\">{{vault.title}}</h4>\n        </div>\n        <div class=\"col-md-6 text-right\">\n            <div class=\"d-flex mb-5\" *ngIf=\"viewMode === 'edit'\">\n                <span class=\"m-auto\"></span>\n                <button class=\"btn btn-outline-secondary mr-3\" routerLink=\"/dashboard/v2\">Cancel</button>\n                <!-- <btn-loading btnClass=\"btn-primary\" [loading]=\"saving\" (click)=\"saveInvoice()\">Save</btn-loading> -->\n                <btn-loading btnClass=\"btn-primary\" [loadingText]=\"loadingText\" [loading]=\"loading\" (click)=\"saveCredentials()\">Save</btn-loading>\n\n            </div>\n            <div class=\"d-sm-flex mb-5\" *ngIf=\"viewMode !== 'edit'\">\n                <span class=\"m-auto\"></span>\n                <button class=\"btn btn-outline-secondary mr-3 mb-sm-0 mb-3\" routerLink=\"/dashboard/v2\">Back To Vault</button>\n                <button class=\"btn btn-outline-secondary mr-3 mb-sm-0 mb-3\" (click)=\"viewMode = 'edit'\">Edit</button>\n            </div>\n        </div>\n    </div>\n\n        <!---===== View Mode -- Readonly =======-->\n\n        <div *ngIf=\"viewMode !== 'edit'\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"card mb-4\">\n                        <div class=\"card-body\">\n                            <form [formGroup]=\"vaultForm\">\n                                <div class=\"row card-body justify-content-between\">\n                                    <div class=\"card-title mb-3\">Item Details</div> \n\n                                    <!-- Autofill and Favorite slider switches -->\n                                    <!-- <div class=\"row\">\n                                        <div>\n                                            <label class=\"switch switch-primary mr-3\">\n                                                <span>Favorite?</span>\n                                                <input type=\"checkbox\" unchecked disabled>\n                                                <span class=\"slider\"></span>\n                                            </label>\n                                        </div>\n                                        <div>\n                                            <label class=\"switch switch-primary mr-3\">\n                                                <span>Autofill?</span>\n                                                <input type=\"checkbox\" checked disabled>\n                                                <span class=\"slider\"></span>\n                                            </label>\n                                        </div>\n                                    </div> -->\n\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <label for=\"title\">Title</label>\n                                        <input formControlName=\"title\" type=\"text\" class=\"form-control\" style=\"font-weight: bold\" id=\"title\" value={{vault.title}} readonly>\n                                    </div>\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <label for=\"url\">Website/Domain</label>\n                                        <input formControlName=\"url\" type=\"text\" class=\"form-control\" style=\"font-weight: bold\" id=\"url\" value={{vault.url}} readonly>\n                                    </div>\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <label for=\"username\">Username</label>\n                                        <input formControlName=\"username\" type=\"text\" class=\"form-control\" style=\"font-weight: bold\" id=\"username\" value={{vault.username}} readonly>\n                                    </div>\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <label for=\"password\">Password</label>\n                                        <input formControlName=\"password\" type=\"text\" class=\"form-control\" style=\"font-weight: bold\" id=\"password\" value={{vault.status}} readonly>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!---===== / View Mode -- Readonly =======-->\n\n\n        <!---===== Edit Mode =======-->\n\n        <div *ngIf=\"viewMode === 'edit'\">\n            <div *ngFor=\"let vaultForm of vaultForms let i = index\">\n                <form [formGroup]=\"vaultForm\">\n                    <div class=\"col-md-12\">\n                        <div class=\"card mb-4\">\n                            <div class=\"card-body\">\n                                <!-- <form [formGroup]=\"vaultForm\"\"> -->\n                                <div class=\"row card-body justify-content-between\">\n                                    <div class=\"card-title mb-3\">New Credential Details</div> \n                                    \n                                    <!-- Autofill and Favorite slider switches -->\n                                    <!-- <div class=\"row\">\n                                        <div>\n                                            <label class=\"switch switch-primary mr-3\">\n                                                <span>Favorite?</span>\n                                                <input type=\"checkbox\" unchecked>\n                                                <span class=\"slider\"></span>\n                                            </label>\n                                        </div>\n                                        <div>\n                                            <label class=\"switch switch-primary mr-3\">\n                                                <span>Autofill?</span>\n                                                <input type=\"checkbox\" checked>\n                                                <span class=\"slider\"></span>\n                                            </label>\n                                        </div>\n                                    </div> -->\n                                    \n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <label for=\"title\">Title</label>\n                                        <input formControlName=\"title\" type=\"text\" class=\"form-control\" style=\"font-weight: bold\" id=\"title\" placeholder=\"Enter descriptive title here\" value ={{vaultForm.title}}>\n                                    </div>\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <label for=\"url\">Website/Domain</label>\n                                        <input formControlName=\"url\" type=\"text\" class=\"form-control\" style=\"font-weight: bold\" id=\"url\" formControlName=\"url\" placeholder=\"Enter the domain of the website here, e.g., example.com\" value={{vaultForm.url}}>\n                                    </div>\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <label for=\"username\">Username</label>\n                                        <input formControlName=\"username\" type=\"text\" class=\"form-control\" style=\"font-weight: bold\" id=\"username\" formControlName=\"username\" placeholder=\"Enter your username for this website here\" value={{vaultForm.username}}>\n                                    </div>\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <label for=\"password\">Password</label>\n                                        <input formControlName=\"password\" type=\"text\" class=\"form-control\" style=\"font-weight: bold\" id=\"password\" formControlName=\"password\" placeholder=\"Enter your current password for this website here\" value={{vaultForm.password}}>\n                                    </div>\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        &nbsp;\n                                    </div>\n\n                                    <!-- Password Generator -->\n                                    <div class=\"col-md-6 form-group mb-3\">\n                                        <span *ngIf=\"!showPasswordGenerator[i]\" class=\"text-muted\" (click)=\"showPasswordGenerator[i]=true\">Generate New Password</span>\n                                        <span *ngIf=\"showPasswordGenerator[i]\" class=\"text-muted\" (click)=\"showPasswordGenerator[i]=false\">Done - Hide</span>\n                                        <div *ngIf=\"showPasswordGenerator[i]\" class=\"mb-3\">\n                                            <div class=\"d-flex justify-content-between align-items-center pt-1 mt-2\">\n                                                <div class>Password Length</div>\n                                                <div class=\"d-flex justify-content-between align-items-center\">\n                                                <input type=\"range\" class=\"mr-2\" min=\"8\" max=\"42\" value=\"14\" formControlName=\"length\"> \n                                                <div>{{vaultForm.value.length}} chars</div>\n                                                </div>\n                                            </div>\n\n                                            <div id=\"passwordConfigurator\">\n                                                <div class=\"pt-3\">Password Contains:</div>\n                                                <div class=\"d-flex justify-content-between pt-2\">\n                                                <div class=\"d-flex align-items-center\">\n                                                    <div>Uppercase char</div> \n                                                    <input type=\"checkbox\" class=\"ml-4\" checked name=\"uppercase\" formControlName=\"uppercase\">\n                                                </div>\n                                                <div>...</div>\n                                                <div class=\"d-flex align-items-center\">\n                                                    <div>Lowercase char</div> \n                                                    <input type=\"checkbox\" class=\"ml-4\" checked name=\"lowercase\" formControlName=\"lowercase\">\n                                                </div>\n                                                </div>\n                                                <div class=\"d-flex justify-content-between pt-2\">\n                                                    <div>\n                                                        Numbers <input type=\"checkbox\" class=\"ml-4\" checked name=\"numbers\" formControlName=\"numbers\"> \n                                                    </div>\n                                                    <div>...</div>\n                                                    <div>\n                                                        Symbols <input type=\"checkbox\" class=\"ml-4\" checked name=\"specialchars\" formControlName=\"specialchars\">\n                                                    </div>\n                                                </div>\n                                                <div class=\"pt-3\">\n                                                    <button \n                                                        class=\"btn btn-rounded btn-secondary btn-block\" \n                                                        (click)=\"random_str(i)\">\n                                                            Generate Password\n                                                    </button> \n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <!-- End Password Generator -->\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n        <!-- Button to add one more input form  -->\n        <div class=\"col-md-12\">\n            <button class=\"btn btn-outline-secondary\" (click)=\"this.addEmptyVaultForm()\">+1</button>\n        </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { SodiumPlus, CryptographyKey } from 'sodium-plus';\nimport { JemService } from '../../../shared/services/jem.service';\nimport { AuthService } from '../../../shared/services/auth.service';\n\n@Component({\n    selector: 'app-vault-list',\n    templateUrl: './vault-list.component.html',\n    styleUrls: ['./vault-list.component.scss']\n})\nexport class VaultListComponent implements OnInit {\n    vault: any[]\n\n    constructor(\n        private modalService: NgbModal,\n        private toastr: ToastrService,\n        private jemService: JemService,\n        private auth: AuthService\n    ) { }\n\n    async ngOnInit() {\n       // await this.loadVault()\n    }\n    async loadVault() {\n        var sodium = (!sodium) ? await SodiumPlus.auto(): sodium;\n        var outputVault = [];\n        await this.auth.getAllCredentials()\n            .subscribe(async res => {\n\t\t\t\tres.forEach(async item => {\n\t\t\t\t\tvar data = JSON.parse(item.data);\n\t\t\t\t\tvar metaKEKBuf = Buffer.from(data.metaKEK, 'base64');\n\t\t\t\t\tvar metaDataBuf = Buffer.from(data.metaData, 'base64');\n\n\t\t\t\t\tvar metaKey = await sodium.crypto_aead_xchacha20poly1305_ietf_decrypt(\n\t\t\t\t\t\tmetaKEKBuf.slice(24),\n\t\t\t\t\t\tmetaKEKBuf.slice(0, 24),\n\t\t\t\t\t\tCryptographyKey.from(this.auth.userSettings.metaKey)\n\t\t\t\t\t);\n\n\t\t\t\t\tvar metaData = await sodium.crypto_aead_xchacha20poly1305_ietf_decrypt(\n\t\t\t\t\t\tmetaDataBuf.slice(24),\n\t\t\t\t\t\tmetaDataBuf.slice(0, 24),\n\t\t\t\t\t\tCryptographyKey.from(metaKey)\n\t\t\t\t\t);\n\n\t\t\t\t\tmetaData = JSON.parse(metaData);\n\t\t\t\t\tvar passDataBuf = Buffer.from(data.passData, 'base64');\n\t\t\t\t\t\n\t\t\t\t\toutputVault.push({\n\t\t\t\t\t\t\"id\":item.RowKey,\n\t\t\t\t\t\t\"title\":metaData.title,\n\t\t\t\t\t\t\"username\":metaData.username,\n\t\t\t\t\t\t\"status\": \"encrypted\"});\n                });\n                this.vault = outputVault;\n\t\t\t\t});\n    }\n\n    deleteItem(id, modal) {\n        this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n            .result.then((result) => {\n                this.auth.deleteCredential(id)\n                    .subscribe(res => {\n                        this.toastr.success('Item Deleted!', 'Success!', { timeOut: 3000 });\n                        this.loadVault();\n                    })\n            }, (reason) => {\n            });\n    }\n\n}","<div class=\"breadcrumb\">\n    <h1>Vault</h1>\n    <ul>\n        <li><a href=\"\">Logins</a></li>\n    </ul>\n</div>\n\n<div class=\"separator-breadcrumb border-top\"></div>\n\n<div class=\"row mb-3\">\n    <div class=\"col-md-12 mb-3\">\n        <button class=\"btn btn-primary float-right\" [routerLink]=\"['/vault/new']\">New</button>\n    </div>\n    <div class=\"col-md-12\">\n        <div class=\"card o-hidden\">\n            <ngx-datatable *ngIf=\"vault?.length\" style=\"box-shadow: none\" class=\"material fullscreen\" [style.height]=\"60*vault.length+60+'px'\" [columnMode]=\"'force'\"\n                [headerHeight]=\"50\" [footerHeight]=\"0\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [scrollbarH]=\"true\" [rows]=\"vault\">\n                <ngx-datatable-column>\n                    <ng-template ngx-datatable-header-template>\n                        Title\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.title}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column>\n                    <ng-template ngx-datatable-header-template>\n                        Username/Email Address\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.username}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column [flexGrow]=\"1\">\n                    <ng-template ngx-datatable-header-template>\n                        Status\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        <div class=\"badge p-2 mr-1\" [ngClass]=\"{\n                            'badge-outline-success': row.status === 'encrypted',\n                            'badge-outline-warning': row.status === 'processing',\n                            'badge-outline-danger': row.status === 'decrypted'\n                        }\">\n                            {{row.status}}\n                        </div>\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column [width]=\"120\">\n                    <ng-template ngx-datatable-header-template>\n                        Actions\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        <button class=\"btn btn-wide btn-outline-secondary mr-3\" [routerLink]=\"['/vault/edit', row.id]\">View</button>\n                        <button class=\"btn btn-outline-danger\" (click)=\"deleteItem(row.id, deleteConfirmModal)\">\n                            Delete\n                        </button>\n                    </ng-template>\n                </ngx-datatable-column>\n            </ngx-datatable>\n        </div>\n    </div>\n</div>\n\n<ng-template #deleteConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Are you sure?</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>You are about to delete this item.  Are you absolutely sure?</strong></p>\n        <span class=\"text-danger\">This operation can not be undone.</span>\n        \n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Keep</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Delete</button>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { VaultListComponent } from './vault-list/vault-list.component';\nimport { VaultDetailComponent } from './vault-detail/vault-detail.component';\nimport { AuthGaurd } from '../../shared/services/auth.gaurd';\n\nconst routes: Routes = [\n    {\n        path: '',\n        canActivate: [AuthGaurd],\n        component: VaultListComponent\n    },\n    {\n        path: 'new',\n        canActivate: [AuthGaurd],\n        component: VaultDetailComponent\n    },\n    {\n        path: 'edit/:id',\n        canActivate: [AuthGaurd],\n        component: VaultDetailComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VaultRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VaultRoutingModule } from './vault-routing.module';\nimport { VaultDetailComponent } from './vault-detail/vault-detail.component';\nimport { VaultListComponent } from './vault-list/vault-list.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    NgxDatatableModule,\n    ReactiveFormsModule,\n    SharedComponentsModule,\n    NgbModule,\n    VaultRoutingModule\n  ],\n  declarations: [VaultDetailComponent, VaultListComponent, VaultListComponent]\n})\nexport class VaultModule { }\n"],"sourceRoot":"webpack:///"}