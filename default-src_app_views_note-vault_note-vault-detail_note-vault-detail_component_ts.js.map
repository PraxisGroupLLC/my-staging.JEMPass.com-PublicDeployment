{"version":3,"sources":["./src/app/shared/services/jemUtils.service.ts","./src/app/views/note-vault/note-vault-detail/note-vault-detail.component.ts","./src/app/views/note-vault/note-vault-detail/note-vault-detail.component.html"],"names":[],"mappings":"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","file":"default-src_app_views_note-vault_note-vault-detail_note-vault-detail_component_ts.js","sourcesContent":["/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { JemService } from './jem.service';\nimport { AuthService } from './auth.service';\nimport { SodiumPlus, X25519PublicKey, X25519SecretKey, CryptographyKey } from 'sodium-plus';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\nexport class JemUtilsService {\n    \n\tconstructor(private jemService: JemService, private auth: AuthService, private toastr: ToastrService) {}\n\n\tpublic async decrypt(item) {\n\t\tvar decrypting = true;\n\t\tvar sodium = !sodium ? await SodiumPlus.auto() : sodium;\n\t\tvar passKEKBuf = Buffer.from(item.passKEK, 'base64');\n\t\tvar passKeyB64;\n\n\t\ttry {\n\t\t\tawait this.jemService.decrypt(passKEKBuf, this.auth.deviceSettings).then(async (passKey) => {\n\t\t\t\tpassKeyB64 = passKey;\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tdecrypting = false;\n\t\t\tthis.toastr.error(error.message, 'Error', { timeOut: 5000, closeButton: true, progressBar: true });\n\t\t\treturn;\n\t\t}\n\t\tvar passDataBuf = Buffer.from(item.passData, 'base64');\n\n\t\tvar passDataDec = await sodium.crypto_aead_xchacha20poly1305_ietf_decrypt(\n\t\t\tpassDataBuf.slice(24),\n\t\t\tpassDataBuf.slice(0, 24),\n\t\t\tCryptographyKey.from(passKeyB64, 'base64')\n\t\t);\n\n\t\tpassDataDec = JSON.parse(passDataDec.toString());\n\t\treturn passDataDec;\n\t}\n\n\tpublic encryptAndSave(terminal = true, record) {\n\t\treturn new Promise(async (resolve, reject) => {\n\t\t\tvar sodium = !sodium ? await SodiumPlus.auto() : sodium;\n\n\t\t\t// GENERATE NEW KEYS\n\t\t\tvar metaKey = await sodium.randombytes_buf(32);\n\t\t\tvar passKey = await sodium.randombytes_buf(32);\n\n\t\t\t// ENCRYPT METADATA\n\t\t\tvar nonce = await sodium.randombytes_buf(24);\n\t\t\trecord.metaData = await sodium.crypto_aead_xchacha20poly1305_ietf_encrypt(\n\t\t\t\tJSON.stringify(record.metaData),\n\t\t\t\tnonce,\n\t\t\t\tCryptographyKey.from(metaKey)\n\t\t\t);\n\t\t\trecord.metaData = Buffer.concat([nonce, record.metaData]);\n\t\t\trecord.metaData = record.metaData.toString('base64');\n\n\t\t\t// ENCRYPT PASSDATA\n\t\t\tvar nonce = await sodium.randombytes_buf(24);\n\t\t\trecord.passData = await sodium.crypto_aead_xchacha20poly1305_ietf_encrypt(\n\t\t\t\tJSON.stringify(record.passData),\n\t\t\t\tnonce,\n\t\t\t\tCryptographyKey.from(passKey)\n\t\t\t);\n\t\t\trecord.passData = Buffer.concat([nonce, record.passData]);\n\t\t\trecord.passData = record.passData.toString('base64');\n\n\t\t\t// ENCRYPT RECORD METAKEY WITH USER METAKEY TO GENERATE RECORD METAKEK\n\t\t\tvar nonce = await sodium.randombytes_buf(24);\n\t\t\trecord.metaKEK = await sodium.crypto_aead_xchacha20poly1305_ietf_encrypt(\n\t\t\t\tmetaKey,\n\t\t\t\tnonce,\n\t\t\t\tCryptographyKey.from(this.auth.userSettings.metaKey)\n\t\t\t);\n\t\t\trecord.metaKEK = Buffer.concat([nonce, record.metaKEK]);\n\t\t\trecord.metaKEK = record.metaKEK.toString('base64');\n\n\t\t\t// ENCRYPT PASSDATA - REQURIES JEM\n\t\t\ttry {\n\t\t\t\tawait this.jemService.encrypt(passKey, this.auth.deviceSettings, terminal).then((data) => {\n\t\t\t\t\trecord.passKEK = data;\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\t// this.saving = false;\n\t\t\t\tthis.toastr.error(error.message, 'Error', {\n\t\t\t\t\ttimeOut: 5000,\n\t\t\t\t\tcloseButton: true,\n\t\t\t\t\tprogressBar: true,\n\t\t\t\t});\n\t\t\t\treturn reject();\n\t\t\t}\n\n\t\t\tif (!record.id) {\n\t\t\t\tawait this.auth.addCredential(record).subscribe((item: any) => {\n\t\t\t\t\tthis.toastr.success('Saved item!', 'Success!', {\n\t\t\t\t\t\ttimeOut: 3000,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tresolve('');\n\t\t\t} else {\n\t\t\t\tawait this.auth.updateCredential(record.id, record).subscribe((item: any) => {\n\t\t\t\t\tthis.toastr.success('Item Saved!', 'Success!', { timeOut: 3000 });\n\t\t\t\t});\n\t\t\t\tresolve('');\n\t\t\t}\n\t\t});\n\t}\n\n}\n","/** @format */\n\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { JemUtilsService } from '../../../shared/services/jemUtils.service';\n\nimport { Formio } from '@formio/angular';\nimport { FormioSubmissionState } from '@formio/angular/types/formio-submission';\n\n@Component({\n\tselector: 'app-note-vault-detail',\n\ttemplateUrl: './note-vault-detail.component.html',\n\tstyleUrls: ['./note-vault-detail.component.scss'],\n})\nexport class NoteVaultDetailComponent implements OnInit, OnDestroy {\n\n\tformSchema: any = require('./jempass-secure-note-form.json');\n    secureNoteForm: any; \n    secureNote: any = '';\n\n\t// @Input() secureNote: any;\n\n\tstateData = {\n\t\tisModeEdit: true,\n\t\tisDecrypted: false,\n\t\tdecrypting: false,\n\t\tsaving: false,\n\t};\n\n\tconstructor(\n\t\tprivate jemUtilsService: JemUtilsService,\n\t\tprivate toastr: ToastrService\n\t) {}\n\n\tasync ngOnInit() {\n\n        var parent=this;\n\n\t\t// CREATE THE FORM AND POPULATE WITH METADATA & STATEDATA\n\t\tFormio.createForm(document.getElementById('secureNoteForm'), this.formSchema).then((form) => {\n\n            this.secureNoteForm = form; \n\t\t\t// this.secureNoteForm.submission.data.passData.secureNoteContent = '';\n\t\t\tthis.secureNoteForm.data = { passData: { secureNoteContent: \"123\"}}; \n\n\n            // IF IT IS A PRE-EXISTING RECORD, POPULATE WITH SAVED DATA \n            if (this.secureNote.id) {\n\n                this.secureNoteForm.submission.data.stateData = this.stateData; \n                this.secureNoteForm.submission.data.metaData = this.secureNote.metaData; \n\n                // DECRYPT passDATA\n                this.stateData.decrypting = true;\n                this.jemUtilsService.decrypt(this.secureNote).then((passDataDec) => {                    \n                    this.secureNoteForm.submission.passData = passDataDec\n                });\n\n                // CLEAR OUT THE DECRYPTED DATA AFTER 30 SECS \n                setTimeout(() => {\n                    var passDataDec = null; \n                    this.secureNoteForm.submission.data.passData = passDataDec; \n                    this.secureNoteForm.redraw();\n                }, 30000)\n            };\n\n            // console.log(form.submission.data);\n\n            // Prevent the submission from going to the form.io server.\n\t\t\tform.nosubmit = true;\n\n\t\t\t// Handle form button clicks - buttons emit eponymous events\n\t\t\tform.on('customEvent', async (emittedEvent) => {\n\t\t\t\tswitch (emittedEvent.type) {\n\n                    case 'saveItemButtonClick':\n\t\t\t\t\t\tconsole.log(emittedEvent.type);\n                        await this.saveItem();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'cancelButtonClick':\n\t\t\t\t\t\tconsole.log(emittedEvent.type);\n\t\t\t\t\t\tbreak;\n                }\n\t\t\t});\n\n\t\t});\n\n\t}\n\n\tngOnDestroy() {}\n\n    async saveItem() {\n\t\tthis.secureNote = { ...this.secureNoteForm.submission.data }; \n        // await this.jemUtilsService.encryptAndSave (true, this.secureNote); \n        console.log(this.secureNote);\n    };\n\n}\n","<div class=\"card\">\n<div class=\"card-body\">\n<form id=\"secureNoteForm\"></form>\n</div>\n</div>"],"sourceRoot":"webpack:///"}